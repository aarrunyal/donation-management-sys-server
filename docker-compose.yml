version: "3.7"
services:
  dms_db:
    container_name: dms_db
    image: mysql:8.3
    env_file: ./.env
    networks:
      - dms_network
    environment:
      - MYSQL_ROOT_USER=${MYSQLDB_USER}
      - MYSQL_PASSWORD=${MYSQLDB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQLDB_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQLDB_ROOT_PASSWORD}
    volumes:
      - dms_db:/var/lib/mysql
    ports:
      - "${MYSQLDB_LOCAL_PORT}:${MYSQLDB_DOCKER_PORT}"
    restart: always

  dms_app:
    build:
      context: .
    container_name: dms_app
    image: aarrunyal/dms_app:latest
    env_file: ./.env
    ports:
      - "${SPRING_LOCAL_PORT}:${SPRING_DOCKER_PORT}"
    networks:
      - dms_network
    depends_on:
      - dms_db
      - dms_cache
    environment:
      SPRING_DATASOURCE_URL: ${DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${MYSQLDB_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQLDB_ROOT_PASSWORD}

  dms_cache:
    image: redis:6.2-alpine
    restart: always
    container_name: dms_cache
    env_file: ./.env
    networks:
      - dms_network
    ports:
      - "${REDIS_LOCAL_PORT}:${REDIS_DOCKER_PORT}"
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - dms_cache:/var/lib/redis
networks:
  dms_network:
    name: dms_network

volumes:
  dms_db:
    name: dms_db_volume
  dms_cache:
    name: dms_cache_volume
